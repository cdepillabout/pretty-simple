name: CI

# Trigger the workflow on push or pull request, but only for the master branch
on:
  pull_request:
  push:
    branches: [master]

jobs:
  cabal:
    name: cabal / ghc-${{ matrix.ghc }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          # - macOS-latest
        cabal:
          - "latest"
        ghc:
          - "8.0.2"
          - "8.2.2"
          - "8.4.4"
          - "8.6.5"
          - "8.8.4"
          - "8.10.7"
          - "9.0.2"
          - "9.2.4"

    steps:
    - uses: actions/checkout@v2
      #if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

    - uses: haskell/actions/setup@v1
      id: setup-haskell-cabal
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - uses: actions/cache@v1
      name: Cache cabal-store
      with:
        path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-cabal

    - name: Build
      run: |
        cabal update
        cabal build package:pretty-simple --enable-tests --enable-benchmarks --write-ghc-environment-files=always --flags="buildexample"

    - name: Test
      run: |
        cabal test package:pretty-simple --enable-tests

  stack:
    name: stack / ubuntu-latest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        stack: ["latest"]

    steps:
    - uses: actions/checkout@v2
      #if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

    - uses: haskell/actions/setup@v1
      name: Setup Haskell Stack
      with:
        stack-version: ${{ matrix.stack }}
        enable-stack: true

    - uses: actions/cache@v1
      name: Cache ~/.stack
      with:
        path: ~/.stack
        key: ${{ runner.os }}-stack

    - name: Build
      run: |
        stack build --test --bench --no-run-tests --no-run-benchmarks --flag pretty-simple:buildexample

    - name: Test
      run: |
        stack test

  nix-build-web:
    name: Nix build GHCJS web
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v16
      - name: Build web
        run: nix-build ./web
